# Generated by Django 3.2 on 2022-01-13 18:42

import django.contrib.auth.models
from django.db import migrations, models
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='EmailValidation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.CharField(max_length=30, unique=True, verbose_name='邮箱')),
                ('email_code', models.CharField(max_length=36, unique=True, verbose_name='uuid')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='生成时间')),
            ],
        ),
        migrations.CreateModel(
            name='UserRegistration',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(max_length=255, unique=True, verbose_name='邮箱')),
                ('email_is_verified', models.BooleanField(default=False, verbose_name='是否验证成功')),
                ('username', models.CharField(max_length=15, unique=True, verbose_name='用户名')),
                ('password', models.CharField(max_length=128, verbose_name='密码')),
                ('registration_to_school', models.IntegerField(default=0, verbose_name='入学年份')),
                ('campus', models.CharField(default='None', max_length=15, verbose_name='校区')),
                ('dormitoryA', models.CharField(default='NA', max_length=15, verbose_name='宿舍楼')),
                ('dormitoryB', models.IntegerField(default=0, verbose_name='宿舍号')),
                ('phone', models.IntegerField(default=0, verbose_name='手机号码')),
                ('sex', models.CharField(default='NA', max_length=15, verbose_name='性别')),
                ('birthday', models.CharField(default='NA', max_length=15, verbose_name='生日')),
                ('info_updated_time', models.DateTimeField(auto_now=True, verbose_name='用户信息更新时间')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
